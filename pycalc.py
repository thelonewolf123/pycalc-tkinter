#! /usr/bin/env python
#  -*- coding: utf-8 -*-
#
# GUI module generated by PAGE version 4.17
# In conjunction with Tcl version 8.6
#    Nov 08, 2018 07:06:56 AM IST  platform: Linux

import sys



try:
    from Tkinter import *
except ImportError:
    from tkinter import *

try:
    import ttk
    py3 = False
except ImportError:
    import tkinter.ttk as ttk
    py3 = True


def init(top, gui, *args, **kwargs):
    global w, top_level, root
    w = gui
    top_level = top
    root = top

def destroy_window():
    # Function which closes the window.
    global top_level
    top_level.destroy()
    top_level = None

def vp_start_gui():
    '''Starting point when module is the main routine.'''
    global val, w, root
    root = Tk()
    top = Calculator (root)
    init(root, top)
    root.mainloop()

w = None
def create_Calculator(root, *args, **kwargs):
    '''Starting point when module is imported by another program.'''
    global w, w_win, rt
    rt = root
    w = Toplevel (root)
    top = Calculator (w)
    init(w, top, *args, **kwargs)
    return (w, top)

def destroy_Calculator():
    global w
    w.destroy()
    w = None
   
   
def Exit():
    print('pycalc_support.Exit')
    sys.stdout.flush()

    
expr_str=[]
class Calculator:
    def __init__(self, top=None):
        '''This class configures and populates the toplevel window.
           top is the toplevel containing window.'''
        _bgcolor = '#d9d9d9'  # X11 color: 'gray85'
        _fgcolor = '#000000'  # X11 color: 'black'
        _compcolor = '#d9d9d9' # X11 color: 'gray85'
        _ana1color = '#d9d9d9' # X11 color: 'gray85' 
        _ana2color = '#d9d9d9' # X11 color: 'gray85' 
        top.resizable(0,0)
        top.geometry("281x320+650+150")
        top.title("Calculator")



        self.Entry1 = Entry(top)
        self.Entry1.place(relx=0.071, rely=0.031,height=41, relwidth=0.875)
        self.Entry1.configure(background="grey")
        self.Entry1.configure(font="TkFixedFont")
        self.Entry1.configure(width=246)

        self.Button2 = Button(top)
        self.Button2.place(relx=0.285, rely=0.219, height=27, width=54)
        self.Button2.configure(activebackground="#d9d9d9")
        self.Button2.configure(command=lambda : Calculator.expr(self,"8"))
        self.Button2.configure(text='''8''')
        self.Button2.configure(width=54)

        self.Button3 = Button(top)
        self.Button3.place(relx=0.498, rely=0.219, height=27, width=54)
        self.Button3.configure(activebackground="#d9d9d9")
        self.Button3.configure(command= lambda : Calculator.expr(self,"7"))
        self.Button3.configure(text='''7''')
        self.Button3.configure(width=54)

        self.Button4 = Button(top)
        self.Button4.place(relx=0.712, rely=0.219, height=27, width=62)
        self.Button4.configure(activebackground="#d9d9d9")
        self.Button4.configure(command=lambda : Calculator.expr(self,"*"))
        self.Button4.configure(text='''*''')
        self.Button4.configure(width=62)

        self.Button1 = Button(top)
        self.Button1.place(relx=0.071, rely=0.219, height=27, width=54)
        self.Button1.configure(activebackground="#d9d9d9")
        self.Button1.configure(command=lambda : Calculator.expr(self,"9"))
        self.Button1.configure(text='''9''')

        self.Button1_1 = Button(top)
        self.Button1_1.place(relx=0.071, rely=0.344, height=27, width=54)
        self.Button1_1.configure(activebackground="#d9d9d9")
        self.Button1_1.configure(command=lambda : Calculator.expr(self,"6"))
        self.Button1_1.configure(text='''6''')

        self.Button1_2 = Button(top)
        self.Button1_2.place(relx=0.285, rely=0.344, height=27, width=54)
        self.Button1_2.configure(activebackground="#d9d9d9")
        self.Button1_2.configure(command=lambda : Calculator.expr(self,"5"))
        self.Button1_2.configure(text='''5''')

        self.Button1_3 = Button(top)
        self.Button1_3.place(relx=0.498, rely=0.469, height=27, width=54)
        self.Button1_3.configure(activebackground="#d9d9d9")
        self.Button1_3.configure(command=lambda : Calculator.expr(self,"1"))
        self.Button1_3.configure(text='''1''')

        self.Button1_4 = Button(top)
        self.Button1_4.place(relx=0.285, rely=0.469, height=27, width=54)
        self.Button1_4.configure(activebackground="#d9d9d9")
        self.Button1_4.configure(command=lambda : Calculator.expr(self,"2"))
        self.Button1_4.configure(text='''2''')

        self.Button1_5 = Button(top)
        self.Button1_5.place(relx=0.071, rely=0.469, height=27, width=54)
        self.Button1_5.configure(activebackground="#d9d9d9")
        self.Button1_5.configure(command=lambda : Calculator.expr(self,"3"))
        self.Button1_5.configure(text='''3''')

        self.Button1_6 = Button(top)
        self.Button1_6.place(relx=0.712, rely=0.344, height=27, width=64)
        self.Button1_6.configure(activebackground="#d9d9d9")
        self.Button1_6.configure(command=lambda : Calculator.expr(self,"/"))
        self.Button1_6.configure(text='''/''')
        self.Button1_6.configure(width=64)

        self.Button1_7 = Button(top)
        self.Button1_7.place(relx=0.498, rely=0.344, height=27, width=54)
        self.Button1_7.configure(activebackground="#d9d9d9")
        self.Button1_7.configure(command=lambda : Calculator.expr(self,"4"))
        self.Button1_7.configure(text='''4''')

        self.Button1_8 = Button(top)
        self.Button1_8.place(relx=0.712, rely=0.594, height=27, width=64)
        self.Button1_8.configure(activebackground="#d9d9d9")
        self.Button1_8.configure(command=lambda : Calculator.expr(self,"+"))
        self.Button1_8.configure(text='''+''')
        self.Button1_8.configure(width=64)

        self.Button1_9 = Button(top)
        self.Button1_9.place(relx=0.498, rely=0.594, height=27, width=54)
        self.Button1_9.configure(activebackground="#d9d9d9")
        self.Button1_9.configure(command=lambda : Calculator.calulate(self))
        self.Button1_9.configure(text='''=''')

        self.Button1_10 = Button(top)
        self.Button1_10.place(relx=0.285, rely=0.594, height=27, width=54)
        self.Button1_10.configure(activebackground="#d9d9d9")
        self.Button1_10.configure(command=lambda : Calculator.expr(self,"0"))
        self.Button1_10.configure(text='''0''')

        self.Button1_11 = Button(top)
        self.Button1_11.place(relx=0.071, rely=0.594, height=27, width=54)
        self.Button1_11.configure(activebackground="#d9d9d9")
        self.Button1_11.configure(command=lambda : Calculator.expr(self,"."))
        self.Button1_11.configure(text='''.''')

        self.Button1_12 = Button(top)
        self.Button1_12.place(relx=0.712, rely=0.469, height=27, width=64)
        self.Button1_12.configure(activebackground="#d9d9d9")
        self.Button1_12.configure(command=lambda : Calculator.expr(self,"-"))
        self.Button1_12.configure(text='''-''')
        self.Button1_12.configure(width=64)

        self.Button1_13 = Button(top)
        self.Button1_13.place(relx=0.071, rely=0.844, height=27, width=244)
        self.Button1_13.configure(activebackground="#d9d9d9")
        self.Button1_13.configure(command=Exit)
        self.Button1_13.configure(text='''Exit''')
        self.Button1_13.configure(width=244)

        self.Button1_14 = Button(top)
        self.Button1_14.place(relx=0.498, rely=0.719, height=27, width=124)
        self.Button1_14.configure(activebackground="#d9d9d9")
        self.Button1_14.configure(command=lambda: Calculator.delete(self))
        self.Button1_14.configure(text='''Delete''')
        self.Button1_14.configure(width=124)

        self.Button1_15 = Button(top)
        self.Button1_15.place(relx=0.071, rely=0.719, height=27, width=114)
        self.Button1_15.configure(activebackground="#d9d9d9")
        self.Button1_15.configure(command=lambda : Calculator.clear(self))
        self.Button1_15.configure(text='''Clear''')
        self.Button1_15.configure(width=114)
        
    def expr(self,s):
        print('pycalc_support.expr0')
        expr_str.append(s)
        print(expr_str)
        expr_string=''
        for i in expr_str:
            expr_string+=i
        self.Entry1.delete(0, END)
        self.Entry1.insert(0, expr_string)
        sys.stdout.flush()
    def calulate(self):
        print('pycalc_support.calulate')
        #print("The Ans. is... ",eval(expr_str))
        expr_string=''
        for i in expr_str:
            expr_string+=i
        j=len(expr_str)
        for l in range(0,j):
            expr_str.pop()     
        self.Entry1.delete(0, END)
        self.Entry1.insert(0, eval(expr_string))
        sys.stdout.flush()
    def clear(self):
        print('pycalc_support.clear')
        #expr_str=''
        j=len(expr_str)
        for l in range(0,j):
            expr_str.pop()     
        self.Entry1.delete(0, END)
        sys.stdout.flush()
    def delete(self):
        print('pycalc_support.delete')
        expr_str.pop()
        expr_string=''
        for i in expr_str:
            expr_string+=i
        self.Entry1.delete(0, END)
        self.Entry1.insert(0, expr_string)
        sys.stdout.flush()



if __name__ == '__main__':
    vp_start_gui()
	
